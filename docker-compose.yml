version: '3'

services:
  db:
    restart: always
    image: postgres
    container_name: db
    env_file:
      - ./.env
    ports:
      - '5432:5432'
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: [ 'CMD-SHELL', 'pg_isready -U postgres' ]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: .
    container_name: backend
    depends_on:
      db:
        condition: service_healthy
    command: >
      bash -c "python manage.py collectstatic --noinput
      && python manage.py makemigrations
      && python manage.py migrate
      && python manage.py loaddata data.json
      && python manage.py loaddata db.json
      && python manage.py runserver 0.0.0.0:8000"
    env_file:
      - ./.env
    ports:
      - "8000:8000"
    volumes:
      - .:/app

  redis:
    image: redis
    container_name: redis
    ports:
      - '6379:6379'

  celery:
    build: .
    container_name: celery
    command: >
      bash -c "celery -A config worker --beat --loglevel=info"
    volumes:
      - .:/app
    links:
      - redis
    depends_on:
      - redis
      - backend

volumes:
  pgdata: